usage: bundle edit [-h] [--own-suite OWN_SUITE] [--no-apt-update]
                   [--supplier-suites SUPPLIER_SUITES]
                   [--reference-suites REFERENCE_SUITES]
                   [--highlighted-suites HIGHLIGHTED_SUITES]
                   [--add-from ADD_FROM] [--upgrade-from UPGRADE_FROM]
                   [--no-upgrade-keep-component] [--batch] [--commit]
                   [--clean-commit] [--git-repo-url GIT_REPO_URL]
                   [--git-branch GIT_BRANCH]
                   bundleName

Subcommand edit: Add / Remove/ Upgrade/ Downgrade packages to/in the bundle by
editing an automatically prepared list of available packages.

positional arguments:
  bundleName            The bundleName is a value in the format
                        <distribution>[/<bundleID>] that points to the path in
                        the folder repo/bundle/ in which the bundle is stored.
                        Is is possible to just provide the <distribution>
                        part. In this case, there will be a new bundle (with a
                        newly incremented bundleID) created for this
                        distribution. To support command line completion, it
                        is also allowed to specify the full path relative to
                        the projects root in the form
                        repo/bundle/<distribution>[/<bundleID>].

optional arguments:
  -h, --help            show this help message and exit
  --own-suite OWN_SUITE
                        Suite-Selectors that defines the own suite (the suite
                        of this bundle). The default value is
                        'bundle:{bundle}'.

advanced suites control parameters:
  --no-apt-update       Skip download of packages list.
  --supplier-suites SUPPLIER_SUITES
                        Comma separated list of Suite-Selectors that define
                        the supplier-suites to track. The default value is
                        '{distribution}-supplier:,user-{user}:{distribution}'.
  --reference-suites REFERENCE_SUITES
                        Comma separated list of Suite-Selectors that define
                        the reference suites which hold the current state that
                        we refer on. The default value is
                        '{distribution}-reference:,bundle:{bundle}'.
  --highlighted-suites HIGHLIGHTED_SUITES
                        Comma separated list of Suite-Selectors that define
                        suites whose entries should be put on top of the
                        sources_control.list. The default value is
                        'bundle:{bundle},user-{user}:{distribution}'.

sub command 'edit' specific options:
  --add-from ADD_FROM   Comma separated list of Suite-Selectors that define
                        suites whose (all) packages are automatically
                        activated for being added.
  --upgrade-from UPGRADE_FROM
                        Comma separated list of Suite-Selectors that define
                        suites whose (upgradable) packages are automatically
                        upgraded if they already exist in the reference-
                        suites.
  --no-upgrade-keep-component
                        If not set, when doing a package upgrade via
                        --upgrade-from only those packages will be upgraded
                        that are keeping their physical component (which means
                        after upgrade the package will resist in the same
                        component as before). In case the component of a
                        package has changed in the supplier suite or if the
                        new component doesn't match the current component in
                        the reference suite, the package will not be
                        automatically upgraded and a warning will be reported.
  --batch               Run in batch mode which means without user
                        interaction.

additional arguments for git-commit management:
  --commit              Commit changed files to the (local) project git-
                        repository.
  --clean-commit        Create a clone of the current git-repository into a
                        temporary folder, automatically commit changes there
                        and immediately push back the changes to the git
                        server.
  --git-repo-url GIT_REPO_URL
                        GIT-Repository URL used to clone the repository during
                        --clean-commit. Per default the current git tracking
                        branch is used (if set).
  --git-branch GIT_BRANCH
                        GIT-Repository branch used to pull and push during
                        --clean-commit. The default is 'master'.
